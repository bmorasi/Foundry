{"version":3,"file":"module.js","sources":["../../src/scripts/constants.js","../../src/scripts/lib/lib.js","../../src/scripts/settings.js","../../src/scripts/lib/Logger.js","../../src/scripts/scene-transitions-form.js","../../src/scripts/socket.js","../../src/scripts/utils.js","../../src/scripts/scene-transitions.js","../../src/scripts/api.js","../../src/scripts/main.js","../../src/module.js"],"sourcesContent":["export const CONSTANTS = {\n  MODULE_ID: \"scene-transitions\",\n  PATH: \"modules/scene-transitions/\",\n  SETTINGS: {\n    DEBUG: \"debug\",\n    SHOW_JOURNAL_HEADER: \"show-journal-header-transition\",\n    RESET: \"resetAllSettings\",\n  },\n};\n","import CONSTANTS from \"../constants.js\";\n// =============================\n// Module specific function\n// =============================\n\nexport function isRealNumber(inNumber) {\n  return !isNaN(inNumber) && typeof inNumber === \"number\" && isFinite(inNumber);\n}\n\nexport function stripQueryStringAndHashFromPath(url) {\n  let myUrl = url;\n  if (!myUrl) {\n    return myUrl;\n  }\n  if (myUrl.includes(\"?\")) {\n    myUrl = myUrl.split(\"?\")[0];\n  }\n  if (myUrl.includes(\"#\")) {\n    myUrl = myUrl.split(\"#\")[0];\n  }\n  return myUrl;\n}\n\nexport function retrieveFirstImageFromJournalId(id, pageId, noDefault) {\n  const journalEntry = game.journal.get(id);\n  let firstImage = undefined;\n  if (!journalEntry) {\n    return firstImage;\n  }\n  // Support old data image\n  // if (journalEntry?.data?.img) {\n  // \treturn stripQueryStringAndHashFromPath(journalEntry?.data?.img);\n  // }\n  // Support new image type journal\n  if (journalEntry?.pages.size > 0) {\n    const sortedArray = journalEntry.pages.contents.sort((a, b) => a.sort - b.sort);\n    if (pageId) {\n      const pageSelected = sortedArray.find((page) => page.id === pageId);\n      if (pageSelected) {\n        if (pageSelected.type === \"image\" && pageSelected.src) {\n          firstImage = stripQueryStringAndHashFromPath(pageSelected.src);\n        }\n        // this should manage all MJE type\n        else if (pageSelected.src) {\n          firstImage = stripQueryStringAndHashFromPath(pageSelected.src);\n        }\n      }\n    }\n    // const shouldCheckForDefault = !noDefault && pageId?.length > 0;\n    if (!noDefault && !firstImage) {\n      for (const pageEntry of sortedArray) {\n        if (pageEntry.type === \"image\" && pageEntry.src) {\n          firstImage = stripQueryStringAndHashFromPath(pageEntry.src);\n          break;\n        } else if (pageEntry.src && pageEntry.type === \"pdf\") {\n          firstImage = stripQueryStringAndHashFromPath(pageEntry.src);\n          break;\n        }\n        // this should manage all MJE type\n        else if (pageEntry.src) {\n          firstImage = stripQueryStringAndHashFromPath(pageEntry.src);\n          break;\n        }\n      }\n    }\n  }\n  return firstImage;\n}\n\nexport function retrieveFirstTextFromJournalId(id, pageId, noDefault) {\n  const journalEntry = game.journal.get(id);\n  let firstText = undefined;\n  if (!journalEntry) {\n    return firstText;\n  }\n  // Support old data image\n  // if (journalEntry?.data?.img) {\n  // \treturn stripQueryStringAndHashFromPath(journalEntry?.data?.img);\n  // }\n  // Support new image type journal\n  if (journalEntry?.pages.size > 0) {\n    const sortedArray = journalEntry.pages.contents.sort((a, b) => a.sort - b.sort);\n    if (pageId) {\n      const pageSelected = sortedArray.find((page) => page.id === pageId);\n      if (pageSelected) {\n        if (pageSelected.type === \"text\" && pageSelected.text?.content) {\n          firstText = pageSelected.text?.content;\n        }\n        // this should manage all MJE type\n        else if (pageSelected.text?.content) {\n          firstText = pageSelected.text?.content;\n        }\n      }\n    }\n    // const shouldCheckForDefault = !noDefault && pageId?.length > 0;\n    if (!noDefault && !firstText) {\n      for (const journalEntry of sortedArray) {\n        if (journalEntry.type === \"text\" && journalEntry.text?.content) {\n          firstText = journalEntry.text?.content;\n          break;\n        }\n        // this should manage all MJE type\n        else if (journalEntry.text?.content) {\n          firstText = journalEntry.text?.content;\n          break;\n        }\n      }\n    }\n  }\n  return firstText;\n}\n\nexport class SceneTransitionOptions {\n  constructor(options) {\n    this.action = options.action || \"\";\n    this.sceneID = options.sceneID || \"\";\n    this.gmHide = isBoolean(options.gmHide) ? options.gmHide : false;\n    this.fontColor = options.fontColor || \"#777777\";\n    this.fontSize = options.fontSize || \"28px\";\n    this.bgImg = options.bgImg || \"\";\n    this.bgPos = options.bgPos || \"center center\";\n    this.bgLoop = isBoolean(options.bgLoop) ? options.bgLoop : false;\n    this.bgMuted = isBoolean(options.bgMuted) ? options.bgMuted : true;\n    this.bgSize = options.bgSize || \"cover\";\n    this.bgColor = options.bgColor || \"#000000\";\n    this.bgOpacity = options.bgOpacity || 0.7;\n    this.fadeIn = options.fadeIn || 400;\n    this.delay = options.delay || 4000;\n    this.fadeOut = options.fadeOut || 1000;\n    this.volume = options.volume || 1.0;\n    this.audioLoop = isBoolean(options.audioLoop) ? options.audioLoop : true;\n    this.skippable = isBoolean(options.skippable) ? options.skippable : true;\n    this.gmEndAll = isBoolean(options.gmEndAll) ? options.gmEndAll : true;\n    this.showUI = isBoolean(options.showUI) ? options.showUI : false;\n    this.activateScene = isBoolean(options.activateScene) ? options.activateScene : false;\n    this.content = options.content || \"\";\n    this.audio = options.audio || \"\";\n    this.fromSocket = isBoolean(options.fromSocket) ? options.fromSocket : false;\n    this.users = options.users || [];\n  }\n}\n\nexport function isBoolean(value) {\n  if (String(value) === \"true\" || String(value) === \"false\") {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function isVideo(imgSrc) {\n  const re = /(?:\\.([^.]+))?$/;\n  const ext = re.exec(imgSrc)?.[1];\n  return ext === \"webm\" || ext === \"mp4\";\n}\n\nexport function getVideoType(imgSrc) {\n  if (imgSrc.endsWith(\"webm\")) {\n    return \"video/webm\";\n  } else if (imgSrc.endsWith(\"mp4\")) {\n    return \"video/mp4\";\n  }\n  return \"video/mp4\";\n}\n","import { CONSTANTS } from \"./constants.js\";\nimport \"./lib/lib.js\";\n\nexport const registerSettings = function () {\n  game.settings.registerMenu(CONSTANTS.MODULE_ID, CONSTANTS.SETTINGS.RESET, {\n    name: `${CONSTANTS.MODULE_ID}.setting.${CONSTANTS.SETTINGS.RESET}.name`,\n    hint: `${CONSTANTS.MODULE_ID}.setting.${CONSTANTS.SETTINGS.RESET}.hint`,\n    icon: \"fas fa-coins\",\n    type: ResetSettingsDialog,\n    restricted: true,\n  });\n\n  game.settings.register(CONSTANTS.MODULE_ID, CONSTANTS.SETTINGS.SHOW_JOURNAL_HEADER, {\n    name: `${CONSTANTS.MODULE_ID}.setting.${CONSTANTS.SETTINGS.SHOW_JOURNAL_HEADER}.name`,\n    hint: `${CONSTANTS.MODULE_ID}.setting.${CONSTANTS.SETTINGS.SHOW_JOURNAL_HEADER}.hint`,\n    scope: \"world\",\n    config: true,\n    type: Boolean,\n    default: true,\n  });\n\n  game.settings.register(CONSTANTS.MODULE_ID, CONSTANTS.SETTINGS.DEBUG, {\n    name: `${CONSTANTS.MODULE_ID}.setting.${CONSTANTS.SETTINGS.DEBUG}.name`,\n    hint: `${CONSTANTS.MODULE_ID}.setting.${CONSTANTS.SETTINGS.DEBUG}.hint`,\n    scope: \"client\",\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n\n  const settings = defaultSettings();\n  for (const [name, data] of Object.entries(settings)) {\n    game.settings.register(CONSTANTS.MODULE_ID, name, data);\n  }\n  // for (const [name, data] of Object.entries(otherSettings)) {\n  //     game.settings.register(CONSTANTS.MODULE_ID, name, data);\n  // }\n};\n\nclass ResetSettingsDialog extends FormApplication {\n  constructor(...args) {\n    super(...args);\n\n    return new Dialog({\n      title: game.i18n.localize(`${CONSTANTS.MODULE_ID}.dialogs.resetsettings.title`),\n      content:\n        '<p style=\"margin-bottom:1rem;\">' +\n        game.i18n.localize(`${CONSTANTS.MODULE_ID}.dialogs.resetsettings.content`) +\n        \"</p>\",\n      buttons: {\n        confirm: {\n          icon: '<i class=\"fas fa-check\"></i>',\n          label: game.i18n.localize(`${CONSTANTS.MODULE_ID}.dialogs.resetsettings.confirm`),\n          callback: async () => {\n            await applyDefaultSettings();\n            window.location.reload();\n          },\n        },\n        cancel: {\n          icon: '<i class=\"fas fa-times\"></i>',\n          label: game.i18n.localize(`${CONSTANTS.MODULE_ID}.dialogs.resetsettings.cancel`),\n        },\n      },\n      default: \"cancel\",\n    });\n  }\n  async _updateObject(event, formData) {\n    // do nothing\n  }\n}\n\nasync function applyDefaultSettings() {\n  const settings = defaultSettings(true);\n  // for (const [settingName, settingValue] of Object.entries(settings)) {\n  //   await game.settings.set(CONSTANTS.MODULE_ID, settingName, settingValue.default);\n  // }\n  const settings2 = otherSettings(true);\n  for (const [settingName, settingValue] of Object.entries(settings2)) {\n    await game.settings.set(CONSTANTS.MODULE_ID, settingName, settingValue.default);\n  }\n}\n\nfunction defaultSettings(apply = false) {\n  return {\n    //\n  };\n}\n\nfunction otherSettings(apply = false) {\n  return {\n    \"show-journal-header-transition\": {\n      name: `${CONSTANTS.MODULE_ID}.setting.${CONSTANTS.SETTINGS.SHOW_JOURNAL_HEADER}.name`,\n      hint: `${CONSTANTS.MODULE_ID}.setting.${CONSTANTS.SETTINGS.SHOW_JOURNAL_HEADER}.hint`,\n      scope: \"world\",\n      config: true,\n      type: Boolean,\n      default: true,\n    },\n    debug: {\n      name: `${CONSTANTS.MODULE_ID}.setting.${CONSTANTS.SETTINGS.DEBUG}.name`,\n      hint: `${CONSTANTS.MODULE_ID}.setting.${CONSTANTS.SETTINGS.DEBUG}.hint`,\n      scope: \"client\",\n      config: true,\n      default: false,\n      type: Boolean,\n    },\n  };\n}\n","import { CONSTANTS } from \"../constants\";\n\n// ================================\n// Logger utility\n// ================================\n\nexport default class Logger {\n  static get DEBUG() {\n    return (\n      game.settings.get(CONSTANTS.MODULE_ID, \"debug\") ||\n      game.modules.get(\"_dev-mode\")?.api?.getPackageDebugValue(CONSTANTS.MODULE_ID, \"boolean\")\n    );\n  }\n  // export let debugEnabled = 0;\n  // 0 = none, warnings = 1, debug = 2, all = 3\n\n  static debug(msg, ...args) {\n    try {\n      if (\n        game.settings.get(CONSTANTS.MODULE_ID, \"debug\") ||\n        game.modules.get(\"_dev-mode\")?.api?.getPackageDebugValue(CONSTANTS.MODULE_ID, \"boolean\")\n      ) {\n        console.log(`DEBUG | ${CONSTANTS.MODULE_ID} | ${msg}`, ...args);\n      }\n    } catch (e) {\n      console.error(e.message);\n    }\n    return msg;\n  }\n\n  static logObject(...args) {\n    return this.log(\"\", args);\n  }\n\n  static log(message, ...args) {\n    try {\n      message = `${CONSTANTS.MODULE_ID} | ${message}`;\n      console.log(message.replace(\"<br>\", \"\\n\"), ...args);\n    } catch (e) {\n      console.error(e.message);\n    }\n    return message;\n  }\n\n  static notify(message, ...args) {\n    try {\n      message = `${CONSTANTS.MODULE_ID} | ${message}`;\n      ui.notifications?.notify(message);\n      console.log(message.replace(\"<br>\", \"\\n\"), ...args);\n    } catch (e) {\n      console.error(e.message);\n    }\n    return message;\n  }\n\n  static info(info, notify = false, ...args) {\n    try {\n      info = `${CONSTANTS.MODULE_ID} | ${info}`;\n      if (notify) {\n        ui.notifications?.info(info);\n      }\n      console.log(info.replace(\"<br>\", \"\\n\"), ...args);\n    } catch (e) {\n      console.error(e.message);\n    }\n    return info;\n  }\n\n  static warn(warning, notify = false, ...args) {\n    try {\n      warning = `${CONSTANTS.MODULE_ID} | ${warning}`;\n      if (notify) {\n        ui.notifications?.warn(warning);\n      }\n      console.warn(warning.replace(\"<br>\", \"\\n\"), ...args);\n    } catch (e) {\n      console.error(e.message);\n    }\n    return warning;\n  }\n\n  static errorObject(...args) {\n    return this.error(\"\", false, args);\n  }\n\n  static error(error, notify = true, ...args) {\n    try {\n      error = `${CONSTANTS.MODULE_ID} | ${error}`;\n      if (notify) {\n        ui.notifications?.error(error);\n      }\n      console.error(error.replace(\"<br>\", \"\\n\"), ...args);\n    } catch (e) {\n      console.error(e.message);\n    }\n    return new Error(error.replace(\"<br>\", \"\\n\"));\n  }\n\n  static timelog(message) {\n    warn(Date.now(), message);\n  }\n\n  static i18n = (key) => {\n    return game.i18n.localize(key)?.trim();\n  };\n\n  static i18nFormat = (key, data = {}) => {\n    return game.i18n.format(key, data)?.trim();\n  };\n\n  // setDebugLevel = (debugText): void => {\n  //   debugEnabled = { none: 0, warn: 1, debug: 2, all: 3 }[debugText] || 0;\n  //   // 0 = none, warnings = 1, debug = 2, all = 3\n  //   if (debugEnabled >= 3) CONFIG.debug.hooks = true;\n  // };\n\n  static dialogWarning(message, icon = \"fas fa-exclamation-triangle\") {\n    return `<p class=\"${CONSTANTS.MODULE_ID}-dialog\">\n        <i style=\"font-size:3rem;\" class=\"${icon}\"></i><br><br>\n        <strong style=\"font-size:1.2rem;\">${CONSTANTS.MODULE_ID}</strong>\n        <br><br>${message}\n    </p>`;\n  }\n}\n","import { CONSTANTS } from \"./constants.js\";\nimport Logger from \"./lib/Logger.js\";\nimport { isVideo, getVideoType } from \"./lib/lib.js\";\n\n/**\n * Form controller for editing transitions\n */\nexport class TransitionForm extends FormApplication {\n  constructor(object, options) {\n    super(object, options);\n    this.transition = object || {};\n    this.data = {};\n    this.interval = null;\n    // this.editors['content']={options:{}}\n  }\n  /**\n   *\n   */\n  static get defaultOptions() {\n    return mergeObject(super.defaultOptions, {\n      id: \"scene-transitions-form\",\n      title: game.i18n.localize(`${CONSTANTS.MODULE_ID}.label.editTransition`),\n      template: `modules/${CONSTANTS.MODULE_ID}/templates/transition-form.html`,\n      classes: [\"sheet\", \"scene-transitions-form\"],\n      height: 500,\n      width: 436,\n    });\n  }\n  /**\n   * Get data for the triggler form\n   */\n  async getData(options) {\n    let context = this.transition.options;\n    let sceneTransitionContent = await TextEditor.enrichHTML(this.transition.options.content, {\n      secrets: true,\n      async: true,\n    });\n\n    let sceneTransitionBg = ``;\n\n    if (isVideo(this.transition.options.bgImg)) {\n      sceneTransitionBg = `<div id=\"scene-transitions\" class=\"scene-transitions preview\">\n\t\t\t\t\t<div class=\"color-overlay\"></div>\n\t\t\t\t\t<video class=\"scene-transitions-bg\"\n\t\t\t\t\t\tautoplay\n\t\t\t\t\t\t${this.transition.options.bgLoop ? \"loop\" : \"\"}\n\t\t\t\t\t\t${this.transition.options.bgMuted ? \"muted\" : \"\"}>\n\t\t\t\t\t\t<source src=\"${this.transition.options.bgImg}\" type=\"${getVideoType(this.transition.options.bgImg)}\">\n\t\t\t\t\t</video>\n\t\t\t\t\t<div class=\"scene-transitions-content\">\n\t\t\t\t\t\t${sceneTransitionContent}\n\t\t\t\t\t</div>\n\t\t\t\t</div>`;\n    } else {\n      sceneTransitionBg = `<div id=\"scene-transitions\" class=\"scene-transitions preview\">\n\t\t\t\t<div class=\"scene-transitions-bg\" style=\"max-height: 100%; background-image:url(${this.transition.options.bgImg})\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"scene-transitions-content\">\n\t\t\t\t\t${sceneTransitionContent}\n\t\t\t\t</div>\n\t\t\t</div>`;\n    }\n\n    context.sceneTransitionBgHTML = sceneTransitionBg;\n    context.contentHTML = sceneTransitionContent;\n    return context;\n  }\n  updatePreview() {\n    const w = window.innerWidth;\n    const h = window.innerHeight;\n    const preview = $(\"#scene-transitions\");\n    preview.find(\".scene-transitions-bg\").css({\n      backgroundImage: \"url(\" + this.transition.options.bgImg + \")\",\n      opacity: this.transition.options.bgOpacity,\n      backgroundColor: this.transition.options.bgColor,\n    });\n    preview.find(\".scene-transitions-content\").css({ color: this.transition.options.fontColor });\n  }\n\n  /** @inheritdoc */\n  async activateEditor(name, options = {}, initialContent = \"\") {\n    // options.relativeLinks = true;\n    options.plugins = {\n      menu: ProseMirror.ProseMirrorMenu.build(ProseMirror.defaultSchema, {\n        compact: true,\n        destroyOnSave: false,\n        onSave: () => {\n          this._saveEditor(name, { remove: false });\n        },\n      }),\n    };\n    return super.activateEditor(name, options, initialContent);\n  }\n\n  /**\n   * Handle saving the content of a specific editor by name\n   * @param {string} name           The named editor to save\n   * @param {boolean} [remove]      Remove the editor after saving its content\n   * @returns {Promise<void>}\n   */\n  async _saveEditor(name, { remove = true } = {}) {\n    const editor = this.editors[name];\n    if (!editor || !editor.instance) throw new Error(`${name} is not an active editor name!`);\n    editor.active = false;\n    const instance = editor.instance;\n    await this._onSubmit(new Event(\"submit\"), {\n      preventClose: true,\n    });\n\n    // Remove the editor\n    if (remove) {\n      instance.destroy();\n      editor.instance = editor.mce = null;\n      if (editor.hasButton) editor.button.style.display = \"block\";\n      this.render();\n    }\n    editor.changed = false;\n  }\n\n  /* -------------------------------------------- */\n\n  async activateListeners(html) {\n    super.activateListeners(html);\n    //this.updatePreview();\n    html.on(\"change\", \"input,select,textarea\", this._onChangeInput.bind(this));\n    const bgImageInput = html.find('input[name=\"bgImg\"]');\n    const bgColorInput = html.find('input[name=\"bgColor\"]');\n    const bgOpacityInput = html.find('input[name=\"bgOpacity\"]');\n    const bgSizeInput = html.find('input[name=\"bgSize\"]');\n    const bgPosInput = html.find('input[name=\"bgPos\"]');\n    const bgLoopInput = html.find('input[name=\"bgLoop\"]');\n    const bgMutedInput = html.find('input[name=\"bgMuted\"]');\n    const fontSizeInput = html.find('input[name=\"fontSize\"]');\n    const fontColorInput = html.find('input[name=\"fontColor\"]');\n    const textEditor = html.find(\".mce-content-body\");\n    const volumeSlider = html.find('input[name=\"volume\"]');\n    const audioLoopInput = html.find('input[name=\"audioLoop\"]');\n    const audioInput = html.find('input[name=\"audio\"]');\n    const volumeInput = html.find('input[name=\"volume\"]');\n    const showUIInput = html.find('input[name=\"showUI\"]');\n    const preview = $(\"#scene-transitions\");\n    bgSizeInput.on(\"change\", (e) => {\n      this.data.bgSize = e.target.value;\n      preview.find(\".scene-transitions-bg\").css(\"background-size\", this.data.bgSize);\n    });\n    bgPosInput.on(\"change\", (e) => {\n      this.data.bgPos = e.target.value;\n      preview.find(\".scene-transitions-bg\").css(\"background-position\", this.data.bgPos);\n    });\n    bgImageInput.on(\"change\", (e) => {\n      this.data.bgImg = e.target.value;\n      preview.find(\".scene-transitions-bg\").css(\"background-image\", `url(${this.data.bgImg})`);\n    });\n    bgOpacityInput.on(\"change\", (e) => {\n      this.data.bgOpacity = e.target.value;\n      preview.find(\".scene-transitions-bg\").css(\"opacity\", e.target.value);\n    });\n    fontSizeInput.on(\"change\", (e) => {\n      preview.find(\".scene-transitions-content\").css(\"font-size\", e.target.value);\n    });\n    html.find('button[name=\"cancel\"]').on(\"click\", () => {\n      this.close();\n    });\n    html.find('button[name=\"save\"]').on(\"click\", () => {\n      this._onSubmit();\n    });\n    volumeSlider.on(\"change\", (e) => {\n      //preview.find('audio')[0].volume = e.target.value\n      if (this.playingAudio?.playing) {\n        this.playingAudio.gain.value = e.target.value;\n      }\n    });\n\n    const contentHTML = await TextEditor.enrichHTML(this.transition.options.content, {\n      secrets: true,\n      async: true,\n    });\n    $('[data-edit=\"content\"]').html(contentHTML);\n\n    /*\n\t\tlet zIndex = game.user?.isGM || showUIInput ? 1 : 5000;\n\t\tthis.modal = $(html.find(\"#scene-transitions\"));\n\n\t\tif (isVideo(bgImageInput)) {\n\t\t\tthis.modal.css({ backgroundColor: bgColorInput, zIndex: zIndex });\n\n\t\t\tthis.modal.find(\".scene-transitions-bg\").css({\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: \"100%\",\n\t\t\t});\n\n\t\t\tthis.modal.find(\".color-overlay\").css({\n\t\t\t\topacity: bgOpacityInput,\n\t\t\t\tbackgroundColor: bgColorInput,\n\t\t\t\tzIndex: zIndex,\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: \"100vh\",\n\t\t\t});\n\t\t} else {\n\t\t\tthis.modal.css({\n\t\t\t\tbackgroundColor: bgColorInput,\n\t\t\t\tzIndex: zIndex,\n\t\t\t});\n\n\t\t\tthis.modal.find(\".scene-transitions-bg\").css({\n\t\t\t\tbackgroundImage: \"url(\" + bgImageInput + \")\",\n\t\t\t\topacity: bgOpacityInput,\n\t\t\t\tbackgroundSize: bgSizeInput,\n\t\t\t\tbackgroundPosition: bgPosInput,\n\t\t\t});\n\t\t}\n\n\t\tthis.modal\n\t\t\t.find(\".scene-transitions-content\")\n\t\t\t.css({ color: fontColorInput, fontSize: fontSizeInput, zIndex: 5000 })\n\t\t\t.html(contentHTML);\n\n\t\tif (audioInput) {\n\t\t\tif (game.audio.locked) {\n\t\t\t\tinfo(\"Audio playback locked, cannot play \" + audioInput);\n\t\t\t} else {\n\t\t\t\tlet thisTransition = this;\n\t\t\t\tAudioHelper.play(\n\t\t\t\t\t{\n\t\t\t\t\t\tsrc: audioInput,\n\t\t\t\t\t\tvolume: volumeInput,\n\t\t\t\t\t\tloop: String(audioLoopInput) === \"true\" ? true : false,\n\t\t\t\t\t},\n\t\t\t\t\tfalse\n\t\t\t\t).then(function (audio) {\n\t\t\t\t\taudio.on(\"start\", (a) => {});\n\t\t\t\t\taudio.on(\"stop\", (a) => {});\n\t\t\t\t\taudio.on(\"end\", (a) => {});\n\t\t\t\t\tthisTransition.playingAudio = audio; // a ref for fading later\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t*/\n  }\n\n  close() {\n    // if (SceneTransition.hasNewAudioAPI) {\n    this.transition.playingAudio.stop();\n    // }\n    super.close();\n  }\n\n  async _onSubmit(event, { updateData = null, preventClose = false, preventRender = false } = {}) {\n    const states = this.constructor.RENDER_STATES;\n    if (this._state === states.NONE || !this.options.editable || this._submitting) {\n      return false;\n    }\n    this._submitting = true;\n    this.transition.playingAudio.stop();\n\n    // Acquire and validate Form Data\n    const form = this.element.find(\"form\").first()[0];\n    // Flag if the application is staged to close to prevent callback renders\n    const priorState = this._state;\n    if (this.options.closeOnSubmit) {\n      this._state = states.CLOSING;\n    }\n    if (preventRender && this._state !== states.CLOSING) {\n      this._state = states.RENDERING;\n    }\n    // Trigger the object update\n    const formData = this._getSubmitData(updateData);\n    this.transition.updateData(formData);\n    const scene = game.scenes?.get(this.transition.options.sceneID);\n    if (this.transition.options.sceneID && scene) {\n      await scene.setFlag(CONSTANTS.MODULE_ID, \"transition\", this.transition);\n    } else {\n      Logger.warn(`No scene is been found with sceneId ${this.transition.options.sceneID}`);\n      return;\n    }\n    this._submitting = false;\n    this._state = priorState;\n    if (this.options.closeOnSubmit && !preventClose) {\n      this.close({ submit: false });\n    }\n    return formData;\n  }\n  _onChangeColorPicker(event) {\n    const input = event.target;\n    const form = input.form;\n    form[input.dataset.edit].value = input.value;\n    if ($(input).attr(\"data-edit\") == \"bgColor\") {\n      this.data.bgColor = event.target.value;\n      $(\"#scene-transitions\").css(\"background-color\", event.target.value);\n    } else if ($(input).attr(\"data-edit\") == \"fontColor\") {\n      $(\"#scene-transitions\").find(\".scene-transitions-content\").css(\"color\", event.target.value);\n    }\n  }\n  async _updateObject(event, formData) {\n    return true;\n  }\n}\n","import { CONSTANTS } from \"./constants.js\";\nimport API from \"./api.js\";\nimport Logger from \"./lib/Logger.js\";\n\nexport let sceneTransitionsSocket;\nexport function registerSocket() {\n  Logger.debug(\"Registered sceneTransitionsSocket\");\n  if (sceneTransitionsSocket) {\n    return sceneTransitionsSocket;\n  }\n\n  sceneTransitionsSocket = socketlib.registerModule(CONSTANTS.MODULE_ID);\n  sceneTransitionsSocket.register(\"executeAction\", (...args) => API.executeActionArr(...args));\n  sceneTransitionsSocket.register(\"macro\", (...args) => API.macroArr(...args));\n  game.modules.get(CONSTANTS.MODULE_ID).socket = sceneTransitionsSocket;\n  return sceneTransitionsSocket;\n}\n","/**\n * Reusable utility functions\n */\nexport class Utils {\n  /**\n   * Convert seconds into milliseconds\n   * @param {number} seconds The seconds\n   * @returns {number}       The milliseconds\n   */\n  static convertSecondsToMilliseconds(seconds) {\n    if (!seconds) return 0;\n    return seconds * 1000;\n  }\n  /**\n   * Get the first image source from a journal page\n   * @param {object} page The page\n   * @returns {string}    The image source\n   */\n  static getFirstImageFromPage(page) {\n    const content = page?.text?.content;\n    if (!content) return null;\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(content, \"text/html\");\n    const src = doc.querySelector(\"img\").getAttribute(\"src\");\n    return src || null;\n  }\n\n  /**\n   * Get text including HTML tags from a journal page\n   * @param {object} page The page\n   * @returns {string}    The text\n   */\n  static getTextFromPage(page) {\n    const content = page?.text?.content;\n    if (!content) return null;\n    const textTags = [\"BLOCKQUOTE\", \"CODE\", \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"P\"];\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(content, \"text/html\");\n    const tags = Array.from(doc.body.children);\n    const filteredTags = tags.filter((tag) => textTags.includes(tag.tagName));\n    const text = filteredTags.map((tag) => tag.outerHTML).join(\"\");\n    return text || null;\n  }\n\n  /**\n   * Preload video metadata\n   * @param {string} src The video source\n   * @returns {object}   The video\n   */\n  static preloadVideoMetadata(src) {\n    return new Promise((resolve, reject) => {\n      try {\n        const video = document.createElement(\"video\");\n        video.setAttribute(\"src\", src);\n        video.preload = \"metadata\";\n\n        video.onloadedmetadata = function () {\n          resolve(this);\n        };\n\n        video.onerror = function () {\n          reject(\"Invalid video. Please select a video file.\");\n        };\n\n        return video;\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n}\n","import API from \"./api.js\";\nimport { CONSTANTS } from \"./constants.js\";\nimport Logger from \"./lib/Logger.js\";\nimport {\n  getVideoType,\n  isVideo,\n  retrieveFirstImageFromJournalId,\n  retrieveFirstTextFromJournalId,\n  SceneTransitionOptions,\n} from \"./lib/lib.js\";\nimport { TransitionForm } from \"./scene-transitions-form.js\";\nimport { registerSocket } from \"./socket.js\";\nimport { sceneTransitionsSocket } from \"./socket.js\";\nimport { Utils } from \"./utils.js\";\nexport class SceneTransition {\n  /**\n   *\n   * @param {boolean} preview\n   * @param {object} options: v0.1.1 options go here. Previously sceneID\n   * @param {object} optionsBackCompat: Previously used for options. Deprecated as of 0.1.1\n   */\n  constructor(preview, options, optionsBackCompat) {\n    //Allow for older versions\n    if (optionsBackCompat) {\n      optionsBackCompat.sceneID = options;\n      options = optionsBackCompat;\n      Logger.warn(\n        \"sceneID and options have been combined into paramater 2 'new Transition(preview, options)' - update your macro asap\"\n      );\n    }\n    this.preview = preview;\n    this.options = {\n      ...this.constructor.defaultOptions,\n      ...options,\n    };\n    // this.sceneID = this.options.sceneID;\n    this.journal = null;\n    this.sceneTransitionsElement = null;\n    this.destroying = false;\n    // if (SceneTransition.hasNewAudioAPI) {\n    this.playingAudio = new Sound(\"\");\n    // } else {\n    // \tthis.audio = null;\n    // }\n  }\n  static get defaultOptions() {\n    return new SceneTransitionOptions({\n      sceneID: \"\",\n      gmHide: true,\n      fontColor: \"#777777\",\n      fontSize: \"28px\",\n      bgImg: \"\",\n      bgPos: \"center center\",\n      bgLoop: true,\n      bgMuted: true,\n      bgSize: \"cover\",\n      bgColor: \"#000000\",\n      bgOpacity: 0.7,\n      fadeIn: 400,\n      delay: 4000,\n      fadeOut: 1000,\n      volume: 1.0,\n      audioLoop: true,\n      skippable: true,\n      gmEndAll: true,\n      showUI: false,\n      activateScene: false,\n      content: \"\",\n      audio: \"\",\n      fromSocket: false,\n      users: [],\n    });\n  }\n  // static get hasNewAudioAPI() {\n  //\n  // \treturn typeof Howl != \"undefined\" ? false : true;\n  // }\n  /********************\n   * Button functions for Foundry menus and window headers\n   *******************/\n  /**\n   * Handles the renderSceneConfig Hook\n   *\n   * Injects HTML into the scene config.\n   *\n   * @static\n   * @param {SceneConfig} sceneConfig - The Scene config sheet\n   * @param {jQuery} html - The HTML of the sheet\n   * @param {object} data - Data associated with the sheet rendering\n   * @memberof PinFixer\n   */\n  static async renderSceneConfig(sceneConfig, html, data) {\n    const ambItem = html.find(\".item[data-tab=ambience]\");\n    const ambTab = html.find(\".tab[data-tab=ambience]\");\n\n    ambItem.after(`<a class=\"item\" data-tab=\"scene-transitions\">\n\t\t<i class=\"fas fa-bookmark\"></i> ${game.i18n.localize(`${CONSTANTS.MODULE_ID}.scene.config.title`)}</a>`);\n    ambTab.after(await this.getSceneHtml(this.getSceneTemplateData(data)));\n    this.attachEventListeners(html);\n  }\n  /**\n   * The HTML to be added to the scene configuration\n   * in order to configure Pin Fixer for the scene.\n   *\n   * @param {PinFixSettings} settings - The Pin Fixer settings of the scene being configured.\n   * @static\n   * @return {string} The HTML to be injected\n   * @memberof PinFixer\n   */\n  static async getSceneHtml(settings) {\n    return await renderTemplate(`modules/${CONSTANTS.MODULE_ID}/templates/transition-form.html`, settings);\n  }\n  /**\n   * Retrieves the current data for the scene being configured.\n   *\n   * @static\n   * @param {object} data - The data being passed to the scene config template\n   * @return {PinFixSettings}\n   * @memberof PinFixer\n   */\n  static getSceneTemplateData(hookData) {\n    // scene.getFlag(CONSTANTS.MODULE_ID, \"transition\")\n    let data = getProperty(hookData.data?.flags[CONSTANTS.MODULE_ID], \"transition.options\");\n    if (!data) {\n      data = {\n        sceneID: \"\",\n        gmHide: true,\n        fontColor: \"#777777\",\n        fontSize: \"28px\",\n        bgImg: \"\",\n        bgPos: \"center center\",\n        bgLoop: true,\n        bgMuted: true,\n        bgSize: \"cover\",\n        bgColor: \"#000000\",\n        bgOpacity: 0.7,\n        fadeIn: 400,\n        delay: 4000,\n        fadeOut: 1000,\n        volume: 1.0,\n        audioLoop: true,\n        skippable: true,\n        gmEndAll: true,\n        showUI: false,\n        activateScene: false,\n        content: \"\",\n        audio: \"\",\n        fromSocket: false,\n        users: [],\n      };\n    }\n    // data.sliders = [\"zoomFloor\", \"zoomCeil\", \"minScale\", \"maxScale\", \"hudScale\"]\n    // \t.map(name => this.mapSliderData(data, name));\n\n    return data;\n  }\n  static addPlayTransitionBtn(idField) {\n    return {\n      name: game.i18n.localize(`${CONSTANTS.MODULE_ID}.label.playTransition`),\n      icon: '<i class=\"fas fa-play-circle\"></i>',\n      condition: (li) => {\n        const scene = game.scenes?.get(li.data(idField));\n        if (game.user?.isGM && typeof scene.getFlag(CONSTANTS.MODULE_ID, \"transition\") == \"object\") {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      callback: (li) => {\n        let sceneID = li.data(idField);\n        game.scenes?.preload(sceneID, true);\n        const scene = game.scenes?.get(li.data(idField));\n\n        let transition = scene.getFlag(CONSTANTS.MODULE_ID, \"transition\");\n        let options = transition.options;\n        options.sceneID = sceneID;\n        options = {\n          ...options,\n          fromSocket: true,\n        };\n        if (!sceneTransitionsSocket) {\n          registerSocket();\n        }\n        sceneTransitionsSocket.executeForEveryone(\"executeAction\", options);\n      },\n    };\n  }\n  static addCreateTransitionBtn(idField) {\n    return {\n      name: \"Create Transition\",\n      icon: '<i class=\"fas fa-plus-square\"></i>',\n      condition: (li) => {\n        const scene = game.scenes?.get(li.data(idField));\n        if (game.user?.isGM && !scene.getFlag(CONSTANTS.MODULE_ID, \"transition\")) {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      callback: (li) => {\n        let sceneID = li.data(idField);\n        let options = {\n          sceneID: sceneID,\n        };\n        let activeTransition = new SceneTransition(true, options, undefined);\n        activeTransition.render();\n        new TransitionForm(activeTransition, undefined).render(true);\n      },\n    };\n  }\n  static addEditTransitionBtn(idField) {\n    return {\n      name: \"Edit Transition\",\n      icon: '<i class=\"fas fa-edit\"></i>',\n      condition: (li) => {\n        const scene = game.scenes?.get(li.data(idField));\n        if (game.user?.isGM && scene.getFlag(CONSTANTS.MODULE_ID, \"transition\")) {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      callback: (li) => {\n        let scene = game.scenes?.get(li.data(idField));\n        let transition = scene.getFlag(CONSTANTS.MODULE_ID, \"transition\");\n        let activeTransition = new SceneTransition(true, transition.options, undefined);\n        activeTransition.render();\n        new TransitionForm(activeTransition, undefined).render(true);\n      },\n    };\n  }\n  static addDeleteTransitionBtn(idField) {\n    return {\n      name: game.i18n.localize(`${CONSTANTS.MODULE_ID}.label.deleteTransition`),\n      icon: '<i class=\"fas fa-trash-alt\"></i>',\n      condition: (li) => {\n        const scene = game.scenes?.get(li.data(idField));\n        if (game.user?.isGM && scene.getFlag(CONSTANTS.MODULE_ID, \"transition\")) {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      callback: (li) => {\n        let scene = game.scenes?.get(li.data(idField));\n        scene.unsetFlag(CONSTANTS.MODULE_ID, \"transition\");\n      },\n    };\n  }\n  static addPlayTransitionBtnJE(idField) {\n    return {\n      name: game.i18n.localize(`${CONSTANTS.MODULE_ID}.label.playTransitionFromJournal`),\n      icon: '<i class=\"fas fa-play-circle\"></i>',\n      condition: (li) => {\n        if (game.user?.isGM) {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      callback: (li) => {\n        let id = li.data(idField);\n        let journal = game.journal?.get(id)?.data;\n        if (!journal) {\n          Logger.warn(`No journal is found`);\n          return;\n        }\n        const content = retrieveFirstTextFromJournalId(id, undefined, false);\n        const img = retrieveFirstImageFromJournalId(id, undefined, false);\n        let options = new SceneTransitionOptions({\n          sceneID: undefined,\n          content: content,\n          bgImg: img,\n        });\n        options = {\n          ...options,\n          fromSocket: true,\n        };\n        if (!sceneTransitionsSocket) {\n          registerSocket();\n        }\n        sceneTransitionsSocket.executeForEveryone(\"executeAction\", options);\n      },\n    };\n  }\n\n  /**\n   * The Magic happens here\n   * @returns\n   */\n  async render() {\n    SceneTransition.activeTransition = this;\n\n    if (this.options.gmHide && game.user?.isGM) {\n      // && this.options.fromSocket\n      // Logger.warn(`Cannot play the transaction check out the options : ` + JSON.stringify(this.options));\n      Logger.info(`Option 'gmHide' is true and you are a GM so you don't see the transition`);\n      return;\n    }\n\n    this.options.zIndex = game.user?.isGM || this.options.showUI ? 1 : 5000;\n\n    // https://www.youtube.com/watch?v=05ZHUuQVvJM\n    // https://gist.github.com/brickbones/16818b460aede0639e0120f6b013b69e\n\n    // Destroy existing scene transition\n    if (this.sceneTransitionsElement) {\n      this.destroy(true);\n    }\n\n    // Build new scene transition\n    this.sceneTransitionsElement = this.#appendSceneTransitionsElement();\n    await this.#appendBackgroundElement();\n    const contentElement = this.#appendContentElement();\n    this.#addOnClick();\n\n    if (this.options.audio) {\n      this.#playAudio();\n    }\n\n    this.#executeFadeIn(contentElement);\n  }\n\n  /**\n   * Append the scene transitions element to the body\n   * @returns {object} The scene transitions element\n   */\n  #appendSceneTransitionsElement() {\n    const element = document.createElement(\"div\");\n    element.setAttribute(\"id\", \"scene-transitions\");\n    element.setAttribute(\"class\", \"scene-transitions\");\n    document.body.appendChild(element);\n    return element;\n  }\n\n  /**\n   * Append the background element to the main element\n   * @private\n   */\n  async #appendBackgroundElement() {\n    if (isVideo(this.options.bgImg)) {\n      await this.#appendVideoBackgroundElement();\n    } else {\n      this.#appendStaticBackgroundElement();\n    }\n\n    // Assign CSS to the main element\n    Object.assign(this.sceneTransitionsElement.style, {\n      backgroundColor: this.options.bgColor,\n      zIndex: this.options.zIndex,\n    });\n  }\n\n  /**\n   * Append the video background element to the main element\n   * @private\n   */\n  async #appendVideoBackgroundElement() {\n    const video = await Utils.preloadVideoMetadata(this.options.bgImg);\n    this.options.delay = Utils.convertSecondsToMilliseconds(video.duration);\n\n    // Color Overlay Element\n    const colorOverlayElement = document.createElement(\"div\");\n    colorOverlayElement.setAttribute(\"class\", \"color-overlay\");\n    Object.assign(colorOverlayElement.style, {\n      opacity: this.options.bgOpacity,\n      backgroundColor: this.options.bgColor,\n      zIndex: this.options.zIndex,\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100vh\",\n    });\n    this.sceneTransitionsElement.appendChild(colorOverlayElement);\n\n    // Video Element\n    const videoElement = document.createElement(\"video\");\n    videoElement.setAttribute(\"class\", \"scene-transitions-bg\");\n    videoElement.setAttribute(\"autoplay\", \"\");\n    if (this.options.bgLoop) {\n      videoElement.setAttribute(\"loop\", \"\");\n    }\n    if (this.options.bgMuted) {\n      videoElement.setAttribute(\"muted\", \"\");\n    }\n    Object.assign(videoElement.style, {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n    });\n    const sourceElement = document.createElement(\"source\");\n    sourceElement.setAttribute(\"src\", this.options.bgImg);\n    sourceElement.setAttribute(\"type\", getVideoType(this.options.bgImg));\n    videoElement.appendChild(sourceElement);\n    this.sceneTransitionsElement.appendChild(videoElement);\n  }\n\n  /**\n   * Append the static background element to the main element\n   * @private\n   */\n  #appendStaticBackgroundElement() {\n    const backgroundElement = document.createElement(\"div\");\n    backgroundElement.setAttribute(\"class\", \"scene-transitions-bg\");\n    Object.assign(backgroundElement.style, {\n      backgroundImage: `url(${this.options.bgImg})`,\n      opacity: this.options.bgOpacity,\n      backgroundSize: this.options.bgSize,\n      backgroundPosition: this.options.bgPos,\n    });\n    this.sceneTransitionsElement.appendChild(backgroundElement);\n  }\n\n  /**\n   * Append the content element to the main element\n   * @private\n   */\n  #appendContentElement() {\n    const contentElement = document.createElement(\"div\");\n    contentElement.setAttribute(\"class\", \"scene-transitions-content\");\n    Object.assign(contentElement.style, {\n      color: this.options.fontColor,\n      fontSize: this.options.fontSize,\n      zIndex: 5000,\n    });\n    contentElement.innerHTML = this.options.content;\n    this.sceneTransitionsElement.appendChild(contentElement);\n\n    return contentElement;\n  }\n\n  /**\n   * Add on click listener to the main element\n   */\n  #addOnClick() {\n    const onClick = () => {\n      if (game.user?.isGM && this.options.gmEndAll) {\n        let options = new SceneTransitionOptions({ action: \"end\" });\n        options = {\n          ...options,\n          fromSocket: true,\n        };\n        if (!sceneTransitionsSocket) {\n          registerSocket();\n        }\n        sceneTransitionsSocket.executeForEveryone(\"executeAction\", options);\n      }\n      this.destroy();\n    };\n\n    if (game.user?.isGM || this.options.skippable) {\n      $(this.sceneTransitionsElement).on(\"click\", onClick);\n    }\n  }\n\n  /**\n   * Play the audio\n   * @private\n   */\n  #playAudio() {\n    if (game.audio.locked) {\n      Logger.info(\"Audio playback locked, cannot play \" + this.options.audio);\n    } else {\n      let thisTransition = this;\n      AudioHelper.play(\n        {\n          src: this.options.audio,\n          volume: this.options.volume,\n          loop: String(this.options.audioLoop) === \"true\" ? true : false,\n        },\n        false\n      ).then(function (audio) {\n        audio.on(\"start\", (a) => {});\n        audio.on(\"stop\", (a) => {});\n        audio.on(\"end\", (a) => {});\n        thisTransition.playingAudio = audio; // a ref for fading later\n      });\n    }\n  }\n\n  /**\n   * Execute the fade in of the main element\n   * @private\n   * @param {object} contentElement The content element\n   */\n  #executeFadeIn(contentElement) {\n    const activateScene = () => {\n      if (!this.options.preview) {\n        const scene = game.scenes?.get(this.options.sceneID);\n\n        if (game.user?.isGM && !scene) {\n          Logger.info(`The scene has not been activated as scene [${this.options.sceneID}] was not found`);\n          return;\n        }\n\n        if (this.options.activateScene) {\n          scene.activate();\n        } else if (game.user?.isGM) {\n          scene.view();\n        }\n      }\n    };\n\n    $(contentElement).fadeIn();\n\n    this.setDelay();\n\n    $(this.sceneTransitionsElement).fadeIn(this.options.fadeIn, activateScene);\n  }\n\n  setDelay() {\n    this.timeout = setTimeout(\n      function () {\n        this.destroy();\n      }.bind(this),\n      this.options.delay\n    );\n  }\n\n  destroy(instant = false) {\n    if (this.destroying == true) return;\n    this.destroying = true;\n    let time = instant ? 0 : this.options.fadeOut;\n    clearTimeout(this.timeout);\n\n    if (this.playingAudio?.playing) {\n      this.fadeAudio(this.playingAudio, time);\n    }\n\n    $(this.sceneTransitionsElement)?.fadeOut(time, () => {\n      this.sceneTransitionsElement.remove();\n      this.sceneTransitionsElement = null;\n    });\n  }\n\n  updateData(newData) {\n    this.options = mergeObject(this.options, newData);\n    return this;\n  }\n\n  getJournalText() {\n    return retrieveFirstTextFromJournalId(this.journal?.id, undefined, false);\n  }\n  getJournalImg() {\n    return retrieveFirstImageFromJournalId(this.journal?.id, undefined, false);\n  }\n  fadeAudio(audio, time) {\n    if (!audio?.playing) {\n      return;\n    }\n    if (time == 0) {\n      audio.stop();\n      return;\n    }\n    let volume = audio.gain.value;\n    let targetVolume = 0.000001;\n    let speed = (volume / time) * 50;\n    audio.gain.value = volume;\n    let fade = function () {\n      volume -= speed;\n      audio.gain.value = volume.toFixed(6);\n      if (volume.toFixed(6) <= targetVolume) {\n        audio.stop();\n        clearInterval(audioFadeTimer);\n      }\n    };\n    let audioFadeTimer = setInterval(fade, 50);\n    fade();\n  }\n}\nSceneTransition.activeTransition = new SceneTransition(undefined, undefined, undefined);\n","import Logger from \"./lib/Logger.js\";\nimport { SceneTransition } from \"./scene-transitions.js\";\nimport { sceneTransitionsSocket } from \"./socket.js\";\nconst API = {\n  async executeActionArr(...inAttributes) {\n    if (!Array.isArray(inAttributes)) {\n      throw Logger.error(\"executeActionArr | inAttributes must be of type array\");\n    }\n    let [options] = inAttributes;\n    options = {\n      ...options,\n      fromSocket: true,\n    };\n    this.executeAction(options);\n  },\n  executeAction(options) {\n    let activeTransition = SceneTransition.activeTransition;\n\n    if (activeTransition) {\n      activeTransition.destroy(true);\n    }\n\n    if (options?.action == \"end\") {\n      return;\n    }\n\n    activeTransition = new SceneTransition(false, options, undefined);\n    activeTransition.render();\n  },\n  async macroArr(...inAttributes) {\n    if (!Array.isArray(inAttributes)) {\n      throw Logger.error(\"macroArr | inAttributes must be of type array\");\n    }\n    let [options, showMe] = inAttributes;\n    options = {\n      ...options,\n      fromSocket: true,\n    };\n    // await SceneTransition.macro(false, options, showMe);\n    macro(options, showMe);\n  },\n  macro(options, showMe) {\n    if (options.fromSocket) {\n      API.executeAction(options);\n    } else {\n      if (options.users?.length > 0) {\n        if (showMe) {\n          if (!options.users.includes(game.user.id)) {\n            options.users.push(game.user.id);\n          }\n        } else {\n          if (options.users.includes(game.user.id)) {\n            const excludeNames = [game.user.id];\n            options.users = options.users.filter((name) => !excludeNames.includes(name));\n          }\n        }\n        options = {\n          ...options,\n          fromSocket: true,\n        };\n        sceneTransitionsSocket.executeForUsers(\"executeAction\", options.users, options);\n      } else {\n        if (showMe) {\n          options = {\n            ...options,\n            fromSocket: true,\n          };\n          sceneTransitionsSocket.executeForEveryone(\"executeAction\", options);\n        } else {\n          options = {\n            ...options,\n            fromSocket: true,\n          };\n          sceneTransitionsSocket.executeForOthers(\"executeAction\", options);\n        }\n      }\n    }\n  },\n};\nexport default API;\n","import API from \"./api.js\";\nimport { CONSTANTS } from \"./constants.js\";\nimport Logger from \"./lib/Logger.js\";\nimport { SceneTransitionOptions } from \"./lib/lib.js\";\nimport { SceneTransition } from \"./scene-transitions.js\";\nimport { registerSocket, sceneTransitionsSocket } from \"./socket.js\";\nimport { Utils } from \"./utils.js\";\n\nexport const initHooks = () => {\n  // Logger.warn(\"Init Hooks processing\");\n  // setup all the hooks\n  Hooks.once(\"socketlib.ready\", registerSocket);\n  registerSocket();\n  // SceneTransition.registerSettings();\n  // SceneTransition.registerSockets();\n};\n\nexport const setupHooks = () => {\n  // Logger.warn(\"Setup Hooks processing\");\n  // Set up API\n  game.modules.get(CONSTANTS.MODULE_ID).api = API;\n};\n\nHooks.on(\"closeTransitionForm\", (form) => {\n  let activeSceneTransition = form.object;\n  activeSceneTransition.destroy(true);\n  clearInterval(form.interval);\n});\n\n/********************\n * Adds menu option to Scene Nav and Directory\n *******************/\n//Credit to Winks' Everybody Look Here for the code to add menu option to Scene Nav\n\nHooks.on(\"getSceneNavigationContext\", (html, contextOptions) =>\n  addContextButtons(\"getSceneNavigationContext\", contextOptions)\n);\nHooks.on(\"getSceneDirectoryEntryContext\", (html, contextOptions) =>\n  addContextButtons(\"getSceneDirectoryEntryContext\", contextOptions)\n);\nHooks.on(\"getJournalDirectoryEntryContext\", (html, contextOptions) =>\n  addContextButtons(\"getJournalDirectoryEntryContext\", contextOptions)\n);\nHooks.on(\"renderJournalSheet\", (journal) => addJournalButton(journal));\n\n/**\n *\n * @param {string} hookName      The hook name\n * @param {array} contextOptions The context options\n */\nfunction addContextButtons(hookName, contextOptions) {\n  const idField = {\n    getJournalDirectoryEntryContext: \"documentId\",\n    getSceneDirectoryEntryContext: \"documentId\",\n    getSceneNavigationContext: \"sceneId\",\n  };\n\n  if (hookName === \"getJournalDirectoryEntryContext\") {\n    contextOptions.push(SceneTransition.addPlayTransitionBtnJE(idField[hookName]));\n    return;\n  }\n\n  contextOptions.push(SceneTransition.addPlayTransitionBtn(idField[hookName]));\n  contextOptions.push(SceneTransition.addCreateTransitionBtn(idField[hookName]));\n  contextOptions.push(SceneTransition.addEditTransitionBtn(idField[hookName]));\n  contextOptions.push(SceneTransition.addDeleteTransitionBtn(idField[hookName]));\n}\n\n/**\n * Add 'Play as Transition' button to Journal header\n * @param {object} journal The journal\n */\nfunction addJournalButton(journal) {\n  const pageTypes = [\"image\", \"text\", \"video\"];\n\n  if (!game.user?.isGM) return;\n\n  const showJournalHeaderSetting = game.settings.get(CONSTANTS.MODULE_ID, CONSTANTS.SETTINGS.SHOW_JOURNAL_HEADER);\n  if (!showJournalHeaderSetting) return;\n\n  const header = journal.element[0].querySelector(\"header\");\n\n  if (!header) return;\n\n  const windowTitle = header.querySelector(`h4[class=\"window-title\"]`);\n\n  if (!windowTitle) return;\n\n  const existingLink = header.querySelector(\"a.play-transition\");\n\n  if (existingLink) {\n    existingLink.remove();\n  }\n\n  const page = journal.getData().pages[0];\n\n  if (!pageTypes.includes(page.type)) return;\n\n  const linkElement = document.createElement(\"a\");\n  linkElement.classList.add(\"play-transition\");\n  const iconElement = document.createElement(\"i\");\n  iconElement.classList.add(\"fas\", \"fa-play-circle\");\n  linkElement.appendChild(iconElement);\n  const textNode = document.createTextNode(\"Play as Transition\");\n  linkElement.appendChild(textNode);\n  windowTitle.after(linkElement);\n\n  const onClickJournalButton = (page) => {\n    let content = null;\n    let bgImg = null;\n    let bgLoop = null;\n    let volume = null;\n\n    switch (page.type) {\n      case \"image\":\n        bgImg = page.src;\n        break;\n      case \"text\":\n        content = Utils.getTextFromPage(page);\n        bgImg = Utils.getFirstImageFromPage(page);\n        break;\n      case \"video\":\n        bgImg = page.src;\n        bgLoop = page.video.loop;\n        volume = page.video.volume;\n        break;\n      default:\n        return;\n    }\n\n    let options = new SceneTransitionOptions({ content, bgImg, bgLoop });\n\n    sceneTransitionsSocket.executeForEveryone(\"executeAction\", options);\n  };\n\n  linkElement.addEventListener(\"click\", () => {\n    onClickJournalButton(page);\n  });\n}\n\n// TODO maybe one day...\n// Hooks.on(\"renderSceneConfig\", (...args) => SceneTransition.renderSceneConfig(...args));\n","/**\n * This is your TypeScript entry file for Foundry VTT.\n * Register custom settings, sheets, and constants using the Foundry API.\n * Change this heading to be more descriptive to your module, or remove it.\n * Author: [your name]\n * Content License: [copyright and-or license] If using an existing system\n * \t\t\t\t\tyou may want to put a (link to a) license or copyright\n * \t\t\t\t\tnotice here (e.g. the OGL).\n * Software License: [your license] Put your desired license here, which\n * \t\t\t\t\t determines how others may use and modify your module\n */\n// Import JavaScript modules\n// Import TypeScript modules\nimport { registerSettings } from \"./scripts/settings.js\";\nimport { initHooks, setupHooks } from \"./scripts/main.js\";\nimport \"./scripts/lib/lib.js\";\nimport { CONSTANTS } from \"./scripts/constants.js\";\n/* ------------------------------------ */\n/* Initialize module\t\t\t\t\t*/\n/* ------------------------------------ */\nHooks.once(\"init\", async () => {\n  // console.log(`${CONSTANTS.MODULE_ID} | Initializing ${CONSTANTS.MODULE_ID}`);\n  // Register custom module settings\n  registerSettings();\n  initHooks();\n  // Preload Handlebars templates\n  //await preloadTemplates();\n});\n/* ------------------------------------ */\n/* Setup module\t\t\t\t\t\t\t*/\n/* ------------------------------------ */\nHooks.once(\"setup\", function () {\n  // Do anything after initialization but before ready\n  setupHooks();\n});\n/* ------------------------------------ */\n/* When ready\t\t\t\t\t\t\t*/\n/* ------------------------------------ */\nHooks.once(\"ready\", async () => {\n  // Do anything once the module is ready\n  // if (!game.modules.get(\"lib-wrapper\")?.active && game.user?.isGM) {\n  // \tlet word = \"install and activate\";\n  // \tif (game.modules.get(\"lib-wrapper\")) word = \"activate\";\n  // \tthrow error(`Requires the 'libWrapper' module. Please ${word} it.`);\n  // }\n  // if (!game.modules.get(\"socketLib\")?.active && game.user?.isGM) {\n  // \tlet word = \"install and activate\";\n  // \tif (game.modules.get(\"socketLib\")) word = \"activate\";\n  // \tthrow error(`Requires the 'socketLib' module. Please ${word} it.`);\n  // }\n});\n/* ------------------------------------ */\n/* Other Hooks\t\t\t\t\t\t\t*/\n/* ------------------------------------ */\n\nHooks.once(\"devModeReady\", ({ registerPackageDebugFlag }) => {\n  registerPackageDebugFlag(CONSTANTS.MODULE_ID);\n});\n"],"names":["journalEntry","page"],"mappings":"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"}